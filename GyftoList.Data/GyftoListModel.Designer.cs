//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("GyftoListModel", "FK_EmailAddress_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GyftoList.Data.User), "EmailAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GyftoList.Data.EmailAddress), true)]
[assembly: EdmRelationshipAttribute("GyftoListModel", "FK_ItemShare_Item", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GyftoList.Data.Item), "ItemShare", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GyftoList.Data.ItemShare), true)]
[assembly: EdmRelationshipAttribute("GyftoListModel", "FK_ItemTag_Item", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GyftoList.Data.Item), "ItemTag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GyftoList.Data.ItemTag), true)]
[assembly: EdmRelationshipAttribute("GyftoListModel", "FK_ListItemOrder_Item", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GyftoList.Data.Item), "ListItemOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GyftoList.Data.ListItemOrder), true)]
[assembly: EdmRelationshipAttribute("GyftoListModel", "FK_ListItemOrder_List", "List", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GyftoList.Data.List), "ListItemOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GyftoList.Data.ListItemOrder), true)]
[assembly: EdmRelationshipAttribute("GyftoListModel", "FK_ListShare_List", "List", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GyftoList.Data.List), "ListShare", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GyftoList.Data.ListShare), true)]
[assembly: EdmRelationshipAttribute("GyftoListModel", "FK_ListShare_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GyftoList.Data.User), "ListShare", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GyftoList.Data.ListShare), true)]

#endregion

namespace GyftoList.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class GyftoListEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new GyftoListEntities object using the connection string found in the 'GyftoListEntities' section of the application configuration file.
        /// </summary>
        public GyftoListEntities() : base("name=GyftoListEntities", "GyftoListEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GyftoListEntities object.
        /// </summary>
        public GyftoListEntities(string connectionString) : base(connectionString, "GyftoListEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GyftoListEntities object.
        /// </summary>
        public GyftoListEntities(EntityConnection connection) : base(connection, "GyftoListEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmailAddress> EmailAddresses
        {
            get
            {
                if ((_EmailAddresses == null))
                {
                    _EmailAddresses = base.CreateObjectSet<EmailAddress>("EmailAddresses");
                }
                return _EmailAddresses;
            }
        }
        private ObjectSet<EmailAddress> _EmailAddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> Items
        {
            get
            {
                if ((_Items == null))
                {
                    _Items = base.CreateObjectSet<Item>("Items");
                }
                return _Items;
            }
        }
        private ObjectSet<Item> _Items;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemShare> ItemShares
        {
            get
            {
                if ((_ItemShares == null))
                {
                    _ItemShares = base.CreateObjectSet<ItemShare>("ItemShares");
                }
                return _ItemShares;
            }
        }
        private ObjectSet<ItemShare> _ItemShares;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemTag> ItemTags
        {
            get
            {
                if ((_ItemTags == null))
                {
                    _ItemTags = base.CreateObjectSet<ItemTag>("ItemTags");
                }
                return _ItemTags;
            }
        }
        private ObjectSet<ItemTag> _ItemTags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<List> Lists
        {
            get
            {
                if ((_Lists == null))
                {
                    _Lists = base.CreateObjectSet<List>("Lists");
                }
                return _Lists;
            }
        }
        private ObjectSet<List> _Lists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ListItemOrder> ListItemOrders
        {
            get
            {
                if ((_ListItemOrders == null))
                {
                    _ListItemOrders = base.CreateObjectSet<ListItemOrder>("ListItemOrders");
                }
                return _ListItemOrders;
            }
        }
        private ObjectSet<ListItemOrder> _ListItemOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ListShare> ListShares
        {
            get
            {
                if ((_ListShares == null))
                {
                    _ListShares = base.CreateObjectSet<ListShare>("ListShares");
                }
                return _ListShares;
            }
        }
        private ObjectSet<ListShare> _ListShares;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemCopy> ItemCopies
        {
            get
            {
                if ((_ItemCopies == null))
                {
                    _ItemCopies = base.CreateObjectSet<ItemCopy>("ItemCopies");
                }
                return _ItemCopies;
            }
        }
        private ObjectSet<ItemCopy> _ItemCopies;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmailAddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmailAddresses(EmailAddress emailAddress)
        {
            base.AddObject("EmailAddresses", emailAddress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Items EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItems(Item item)
        {
            base.AddObject("Items", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemShares EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemShares(ItemShare itemShare)
        {
            base.AddObject("ItemShares", itemShare);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemTags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemTags(ItemTag itemTag)
        {
            base.AddObject("ItemTags", itemTag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Lists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLists(List list)
        {
            base.AddObject("Lists", list);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ListItemOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListItemOrders(ListItemOrder listItemOrder)
        {
            base.AddObject("ListItemOrders", listItemOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ListShares EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListShares(ListShare listShare)
        {
            base.AddObject("ListShares", listShare);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemCopies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemCopies(ItemCopy itemCopy)
        {
            base.AddObject("ItemCopies", itemCopy);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GyftoListModel", Name="EmailAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmailAddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmailAddress object.
        /// </summary>
        /// <param name="emailID">Initial value of the EmailID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="emailAddress1">Initial value of the EmailAddress1 property.</param>
        public static EmailAddress CreateEmailAddress(global::System.Int32 emailID, global::System.Int32 userID, global::System.String emailAddress1)
        {
            EmailAddress emailAddress = new EmailAddress();
            emailAddress.EmailID = emailID;
            emailAddress.UserID = userID;
            emailAddress.EmailAddress1 = emailAddress1;
            return emailAddress;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmailID
        {
            get
            {
                return _EmailID;
            }
            set
            {
                if (_EmailID != value)
                {
                    OnEmailIDChanging(value);
                    ReportPropertyChanging("EmailID");
                    _EmailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmailID");
                    OnEmailIDChanged();
                }
            }
        }
        private global::System.Int32 _EmailID;
        partial void OnEmailIDChanging(global::System.Int32 value);
        partial void OnEmailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress1
        {
            get
            {
                return _EmailAddress1;
            }
            set
            {
                OnEmailAddress1Changing(value);
                ReportPropertyChanging("EmailAddress1");
                _EmailAddress1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmailAddress1");
                OnEmailAddress1Changed();
            }
        }
        private global::System.String _EmailAddress1;
        partial void OnEmailAddress1Changing(global::System.String value);
        partial void OnEmailAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GyftoListModel", "FK_EmailAddress_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GyftoListModel.FK_EmailAddress_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GyftoListModel.FK_EmailAddress_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GyftoListModel.FK_EmailAddress_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("GyftoListModel.FK_EmailAddress_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GyftoListModel", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Item object.
        /// </summary>
        /// <param name="itemID">Initial value of the ItemID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static Item CreateItem(global::System.Int32 itemID, global::System.DateTime createDate)
        {
            Item item = new Item();
            item.ItemID = itemID;
            item.CreateDate = createDate;
            return item;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Int32 _ItemID;
        partial void OnItemIDChanging(global::System.Int32 value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _Cost;
        partial void OnCostChanging(Nullable<global::System.Decimal> value);
        partial void OnCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemURL
        {
            get
            {
                return _ItemURL;
            }
            set
            {
                OnItemURLChanging(value);
                ReportPropertyChanging("ItemURL");
                _ItemURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ItemURL");
                OnItemURLChanged();
            }
        }
        private global::System.String _ItemURL;
        partial void OnItemURLChanging(global::System.String value);
        partial void OnItemURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageURL
        {
            get
            {
                return _ImageURL;
            }
            set
            {
                OnImageURLChanging(value);
                ReportPropertyChanging("ImageURL");
                _ImageURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageURL");
                OnImageURLChanged();
            }
        }
        private global::System.String _ImageURL;
        partial void OnImageURLChanging(global::System.String value);
        partial void OnImageURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GyftoListModel", "FK_ItemShare_Item", "ItemShare")]
        public EntityCollection<ItemShare> ItemShares
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemShare>("GyftoListModel.FK_ItemShare_Item", "ItemShare");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemShare>("GyftoListModel.FK_ItemShare_Item", "ItemShare", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GyftoListModel", "FK_ItemTag_Item", "ItemTag")]
        public EntityCollection<ItemTag> ItemTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemTag>("GyftoListModel.FK_ItemTag_Item", "ItemTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemTag>("GyftoListModel.FK_ItemTag_Item", "ItemTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GyftoListModel", "FK_ListItemOrder_Item", "ListItemOrder")]
        public EntityCollection<ListItemOrder> ListItemOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListItemOrder>("GyftoListModel.FK_ListItemOrder_Item", "ListItemOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListItemOrder>("GyftoListModel.FK_ListItemOrder_Item", "ListItemOrder", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GyftoListModel", Name="ItemCopy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemCopy : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemCopy object.
        /// </summary>
        /// <param name="itemCopyID">Initial value of the ItemCopyID property.</param>
        /// <param name="sourceItemID">Initial value of the SourceItemID property.</param>
        /// <param name="copyItemID">Initial value of the CopyItemID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static ItemCopy CreateItemCopy(global::System.Int32 itemCopyID, global::System.Int32 sourceItemID, global::System.Int32 copyItemID, global::System.DateTime createDate)
        {
            ItemCopy itemCopy = new ItemCopy();
            itemCopy.ItemCopyID = itemCopyID;
            itemCopy.SourceItemID = sourceItemID;
            itemCopy.CopyItemID = copyItemID;
            itemCopy.CreateDate = createDate;
            return itemCopy;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemCopyID
        {
            get
            {
                return _ItemCopyID;
            }
            set
            {
                if (_ItemCopyID != value)
                {
                    OnItemCopyIDChanging(value);
                    ReportPropertyChanging("ItemCopyID");
                    _ItemCopyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemCopyID");
                    OnItemCopyIDChanged();
                }
            }
        }
        private global::System.Int32 _ItemCopyID;
        partial void OnItemCopyIDChanging(global::System.Int32 value);
        partial void OnItemCopyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceItemID
        {
            get
            {
                return _SourceItemID;
            }
            set
            {
                OnSourceItemIDChanging(value);
                ReportPropertyChanging("SourceItemID");
                _SourceItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceItemID");
                OnSourceItemIDChanged();
            }
        }
        private global::System.Int32 _SourceItemID;
        partial void OnSourceItemIDChanging(global::System.Int32 value);
        partial void OnSourceItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CopyItemID
        {
            get
            {
                return _CopyItemID;
            }
            set
            {
                OnCopyItemIDChanging(value);
                ReportPropertyChanging("CopyItemID");
                _CopyItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CopyItemID");
                OnCopyItemIDChanged();
            }
        }
        private global::System.Int32 _CopyItemID;
        partial void OnCopyItemIDChanging(global::System.Int32 value);
        partial void OnCopyItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GyftoListModel", Name="ItemShare")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemShare : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemShare object.
        /// </summary>
        /// <param name="itemShareID">Initial value of the ItemShareID property.</param>
        /// <param name="itemID">Initial value of the ItemID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static ItemShare CreateItemShare(global::System.Int32 itemShareID, global::System.Int32 itemID, global::System.Int32 userID)
        {
            ItemShare itemShare = new ItemShare();
            itemShare.ItemShareID = itemShareID;
            itemShare.ItemID = itemID;
            itemShare.UserID = userID;
            return itemShare;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemShareID
        {
            get
            {
                return _ItemShareID;
            }
            set
            {
                if (_ItemShareID != value)
                {
                    OnItemShareIDChanging(value);
                    ReportPropertyChanging("ItemShareID");
                    _ItemShareID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemShareID");
                    OnItemShareIDChanged();
                }
            }
        }
        private global::System.Int32 _ItemShareID;
        partial void OnItemShareIDChanging(global::System.Int32 value);
        partial void OnItemShareIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Int32 _ItemID;
        partial void OnItemIDChanging(global::System.Int32 value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GyftoListModel", "FK_ItemShare_Item", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("GyftoListModel.FK_ItemShare_Item", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("GyftoListModel.FK_ItemShare_Item", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("GyftoListModel.FK_ItemShare_Item", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("GyftoListModel.FK_ItemShare_Item", "Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GyftoListModel", Name="ItemTag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemTag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemTag object.
        /// </summary>
        /// <param name="itemTagID">Initial value of the ItemTagID property.</param>
        /// <param name="itemID">Initial value of the ItemID property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static ItemTag CreateItemTag(global::System.Int32 itemTagID, global::System.Int32 itemID, global::System.String title, global::System.DateTime createDate)
        {
            ItemTag itemTag = new ItemTag();
            itemTag.ItemTagID = itemTagID;
            itemTag.ItemID = itemID;
            itemTag.Title = title;
            itemTag.CreateDate = createDate;
            return itemTag;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemTagID
        {
            get
            {
                return _ItemTagID;
            }
            set
            {
                if (_ItemTagID != value)
                {
                    OnItemTagIDChanging(value);
                    ReportPropertyChanging("ItemTagID");
                    _ItemTagID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemTagID");
                    OnItemTagIDChanged();
                }
            }
        }
        private global::System.Int32 _ItemTagID;
        partial void OnItemTagIDChanging(global::System.Int32 value);
        partial void OnItemTagIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Int32 _ItemID;
        partial void OnItemIDChanging(global::System.Int32 value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GyftoListModel", "FK_ItemTag_Item", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("GyftoListModel.FK_ItemTag_Item", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("GyftoListModel.FK_ItemTag_Item", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("GyftoListModel.FK_ItemTag_Item", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("GyftoListModel.FK_ItemTag_Item", "Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GyftoListModel", Name="List")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class List : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new List object.
        /// </summary>
        /// <param name="listID">Initial value of the ListID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static List CreateList(global::System.Int32 listID, global::System.DateTime createDate)
        {
            List list = new List();
            list.ListID = listID;
            list.CreateDate = createDate;
            return list;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListID
        {
            get
            {
                return _ListID;
            }
            set
            {
                if (_ListID != value)
                {
                    OnListIDChanging(value);
                    ReportPropertyChanging("ListID");
                    _ListID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListID");
                    OnListIDChanged();
                }
            }
        }
        private global::System.Int32 _ListID;
        partial void OnListIDChanging(global::System.Int32 value);
        partial void OnListIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PublicKey
        {
            get
            {
                return _PublicKey;
            }
            set
            {
                OnPublicKeyChanging(value);
                ReportPropertyChanging("PublicKey");
                _PublicKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PublicKey");
                OnPublicKeyChanged();
            }
        }
        private global::System.String _PublicKey;
        partial void OnPublicKeyChanging(global::System.String value);
        partial void OnPublicKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GyftoListModel", "FK_ListItemOrder_List", "ListItemOrder")]
        public EntityCollection<ListItemOrder> ListItemOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListItemOrder>("GyftoListModel.FK_ListItemOrder_List", "ListItemOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListItemOrder>("GyftoListModel.FK_ListItemOrder_List", "ListItemOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GyftoListModel", "FK_ListShare_List", "ListShare")]
        public EntityCollection<ListShare> ListShares
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListShare>("GyftoListModel.FK_ListShare_List", "ListShare");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListShare>("GyftoListModel.FK_ListShare_List", "ListShare", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GyftoListModel", Name="ListItemOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ListItemOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListItemOrder object.
        /// </summary>
        /// <param name="listItemOrderID">Initial value of the ListItemOrderID property.</param>
        /// <param name="listID">Initial value of the ListID property.</param>
        /// <param name="itemID">Initial value of the ItemID property.</param>
        /// <param name="ordinal">Initial value of the Ordinal property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static ListItemOrder CreateListItemOrder(global::System.Int32 listItemOrderID, global::System.Int32 listID, global::System.Int32 itemID, global::System.Int32 ordinal, global::System.DateTime createDate)
        {
            ListItemOrder listItemOrder = new ListItemOrder();
            listItemOrder.ListItemOrderID = listItemOrderID;
            listItemOrder.ListID = listID;
            listItemOrder.ItemID = itemID;
            listItemOrder.Ordinal = ordinal;
            listItemOrder.CreateDate = createDate;
            return listItemOrder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListItemOrderID
        {
            get
            {
                return _ListItemOrderID;
            }
            set
            {
                if (_ListItemOrderID != value)
                {
                    OnListItemOrderIDChanging(value);
                    ReportPropertyChanging("ListItemOrderID");
                    _ListItemOrderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListItemOrderID");
                    OnListItemOrderIDChanged();
                }
            }
        }
        private global::System.Int32 _ListItemOrderID;
        partial void OnListItemOrderIDChanging(global::System.Int32 value);
        partial void OnListItemOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListID
        {
            get
            {
                return _ListID;
            }
            set
            {
                if (_ListID != value)
                {
                    OnListIDChanging(value);
                    ReportPropertyChanging("ListID");
                    _ListID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListID");
                    OnListIDChanged();
                }
            }
        }
        private global::System.Int32 _ListID;
        partial void OnListIDChanging(global::System.Int32 value);
        partial void OnListIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Int32 _ItemID;
        partial void OnItemIDChanging(global::System.Int32 value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Ordinal
        {
            get
            {
                return _Ordinal;
            }
            set
            {
                OnOrdinalChanging(value);
                ReportPropertyChanging("Ordinal");
                _Ordinal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ordinal");
                OnOrdinalChanged();
            }
        }
        private global::System.Int32 _Ordinal;
        partial void OnOrdinalChanging(global::System.Int32 value);
        partial void OnOrdinalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GyftoListModel", "FK_ListItemOrder_Item", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("GyftoListModel.FK_ListItemOrder_Item", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("GyftoListModel.FK_ListItemOrder_Item", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("GyftoListModel.FK_ListItemOrder_Item", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("GyftoListModel.FK_ListItemOrder_Item", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GyftoListModel", "FK_ListItemOrder_List", "List")]
        public List List
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<List>("GyftoListModel.FK_ListItemOrder_List", "List").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<List>("GyftoListModel.FK_ListItemOrder_List", "List").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<List> ListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<List>("GyftoListModel.FK_ListItemOrder_List", "List");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<List>("GyftoListModel.FK_ListItemOrder_List", "List", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GyftoListModel", Name="ListShare")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ListShare : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListShare object.
        /// </summary>
        /// <param name="listShareID">Initial value of the ListShareID property.</param>
        /// <param name="listID">Initial value of the ListID property.</param>
        /// <param name="ownerID">Initial value of the OwnerID property.</param>
        /// <param name="publicKey">Initial value of the PublicKey property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static ListShare CreateListShare(global::System.Int32 listShareID, global::System.Int32 listID, global::System.Int32 ownerID, global::System.String publicKey, global::System.DateTime createDate)
        {
            ListShare listShare = new ListShare();
            listShare.ListShareID = listShareID;
            listShare.ListID = listID;
            listShare.OwnerID = ownerID;
            listShare.PublicKey = publicKey;
            listShare.CreateDate = createDate;
            return listShare;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListShareID
        {
            get
            {
                return _ListShareID;
            }
            set
            {
                if (_ListShareID != value)
                {
                    OnListShareIDChanging(value);
                    ReportPropertyChanging("ListShareID");
                    _ListShareID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListShareID");
                    OnListShareIDChanged();
                }
            }
        }
        private global::System.Int32 _ListShareID;
        partial void OnListShareIDChanging(global::System.Int32 value);
        partial void OnListShareIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListID
        {
            get
            {
                return _ListID;
            }
            set
            {
                if (_ListID != value)
                {
                    OnListIDChanging(value);
                    ReportPropertyChanging("ListID");
                    _ListID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListID");
                    OnListIDChanged();
                }
            }
        }
        private global::System.Int32 _ListID;
        partial void OnListIDChanging(global::System.Int32 value);
        partial void OnListIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OwnerID
        {
            get
            {
                return _OwnerID;
            }
            set
            {
                if (_OwnerID != value)
                {
                    OnOwnerIDChanging(value);
                    ReportPropertyChanging("OwnerID");
                    _OwnerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OwnerID");
                    OnOwnerIDChanged();
                }
            }
        }
        private global::System.Int32 _OwnerID;
        partial void OnOwnerIDChanging(global::System.Int32 value);
        partial void OnOwnerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PublicKey
        {
            get
            {
                return _PublicKey;
            }
            set
            {
                OnPublicKeyChanging(value);
                ReportPropertyChanging("PublicKey");
                _PublicKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PublicKey");
                OnPublicKeyChanged();
            }
        }
        private global::System.String _PublicKey;
        partial void OnPublicKeyChanging(global::System.String value);
        partial void OnPublicKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GyftoListModel", "FK_ListShare_List", "List")]
        public List List
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<List>("GyftoListModel.FK_ListShare_List", "List").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<List>("GyftoListModel.FK_ListShare_List", "List").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<List> ListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<List>("GyftoListModel.FK_ListShare_List", "List");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<List>("GyftoListModel.FK_ListShare_List", "List", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GyftoListModel", "FK_ListShare_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GyftoListModel.FK_ListShare_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GyftoListModel.FK_ListShare_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("GyftoListModel.FK_ListShare_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("GyftoListModel.FK_ListShare_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GyftoListModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static User CreateUser(global::System.Int32 userID)
        {
            User user = new User();
            user.UserID = userID;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PublicKey
        {
            get
            {
                return _PublicKey;
            }
            set
            {
                OnPublicKeyChanging(value);
                ReportPropertyChanging("PublicKey");
                _PublicKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PublicKey");
                OnPublicKeyChanged();
            }
        }
        private global::System.String _PublicKey;
        partial void OnPublicKeyChanging(global::System.String value);
        partial void OnPublicKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FName
        {
            get
            {
                return _FName;
            }
            set
            {
                OnFNameChanging(value);
                ReportPropertyChanging("FName");
                _FName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FName");
                OnFNameChanged();
            }
        }
        private global::System.String _FName;
        partial void OnFNameChanging(global::System.String value);
        partial void OnFNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LName
        {
            get
            {
                return _LName;
            }
            set
            {
                OnLNameChanging(value);
                ReportPropertyChanging("LName");
                _LName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LName");
                OnLNameChanged();
            }
        }
        private global::System.String _LName;
        partial void OnLNameChanging(global::System.String value);
        partial void OnLNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GyftoListModel", "FK_EmailAddress_User", "EmailAddress")]
        public EntityCollection<EmailAddress> EmailAddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmailAddress>("GyftoListModel.FK_EmailAddress_User", "EmailAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmailAddress>("GyftoListModel.FK_EmailAddress_User", "EmailAddress", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GyftoListModel", "FK_ListShare_User", "ListShare")]
        public EntityCollection<ListShare> ListShares
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListShare>("GyftoListModel.FK_ListShare_User", "ListShare");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListShare>("GyftoListModel.FK_ListShare_User", "ListShare", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
